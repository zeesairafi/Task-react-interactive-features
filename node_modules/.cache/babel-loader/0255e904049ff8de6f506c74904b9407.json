{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alsai\\\\Downloads\\\\Development\\\\Task-react-interactive-features\\\\src\\\\components\\\\SearchBar.js\";\nimport React from \"react\"; // Styling\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [event, query] = useState(\"\");\nlet searchbar = SearchBar.filter(search => search.name.toLowerCase().includes(query.toLowerCase())).map(search => /*#__PURE__*/_jsxDEV(Search, {\n  search: search\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 115\n}, this));\n\nconst SearchBar = props => {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"searchBar\",\n    onChange: event => console.log(event.target.value),\n    placeholder: \"Search for a cookie name\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/alsai/Downloads/Development/Task-react-interactive-features/src/components/SearchBar.js"],"names":["React","event","query","useState","searchbar","SearchBar","filter","search","name","toLowerCase","includes","map","props","console","log","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;;AACA,MAAM,CAACC,KAAD,EAAQC,KAAR,IAAkBC,QAAQ,CAAC,EAAD,CAAhC;AAEA,IAAIC,SAAS,GAAGC,SAAS,CAACC,MAAV,CAAkBC,MAAD,IAAUA,MAAM,CAACC,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmCR,KAAK,CAACO,WAAN,EAAnC,CAA3B,EAAoFE,GAApF,CAAyFJ,MAAD,iBAAU,QAAC,MAAD;AAAQ,EAAA,MAAM,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,QAAlG,CAAhB;;AAEA,MAAMF,SAAS,GAAIO,KAAD,IAAW;AAC3B,sBACE;AAAO,IAAA,SAAS,EAAC,WAAjB;AACE,IAAA,QAAQ,EAAGX,KAAD,IAAWY,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACc,MAAN,CAAaC,KAAzB,CADvB;AAEE,IAAA,WAAW,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;KAAMX,S;AASN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\r\n// Styling\r\nconst [event, query ] = useState(\"\");\r\n\r\nlet searchbar = SearchBar.filter((search)=>search.name.toLowerCase().includes(query.toLowerCase())).map((search)=><Search search={search}/>);\r\n\r\nconst SearchBar = (props) => {\r\n  return (\r\n    <input className=\"searchBar\"\r\n      onChange={(event) => console.log(event.target.value)}\r\n      placeholder=\"Search for a cookie name\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n"]},"metadata":{},"sourceType":"module"}